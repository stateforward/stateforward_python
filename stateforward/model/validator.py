"""

Module for validating various structures by extending the Visitor class.

This module contains the Validator class, which inherits from the `Visitor` class provided
by `stateforward.model.visitor`. The Validator class is designed to act on structures that
require validation, leveraging the visitor pattern to apply validation logic. The `visit_method_prefix` attribute
is set to 'validate', indicating that the methods within the Validator class should follow the naming
convention of 'validate_<item>', where <item> is the structure or element to be validated.

Class
-----
Validator : Visitor
    A specialized Visitor class with methods prefixed with 'validate_' for structure-validation purposes.


Note: Documentation automatically generated by https://undoc.ai
"""
from stateforward.model.visitor import Visitor


class Validator(Visitor, visit_method_prefix="validate"):
    """
    A class that serves as a validator by extending the functionality of a Visitor through inheritance.
    The Validator class inherits from the Visitor class and utilizes a specific method prefix 'validate' to perform its operations. As a result, it leverages the existing structure of Visitor and applies validation logic to the operations represented by methods with the 'validate' prefix.
    Attributes:
        visit_method_prefix (str): A class-level attribute that specifies the prefix for the visit methods that this Validator class will implement or utilize. The default value set for this prefix is 'validate', indicating the validation-centric nature of the methods within this class.
    Note:
        The Validator class itself is typically abstract and would require concrete implementations of the validate-prefixed methods within subclasses. These subclasses will provide the specific validation logic that pertains to the types of objects or data structures they are meant to validate.
    Inherits:
        Visitor: The base class from which Validator derives, typically providing a structure for visiting different types of elements within a data structure or object hierarchy.
    """
    pass
